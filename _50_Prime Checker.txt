import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.lang.reflect.*;



//in is the inputstream class static data memeber ,to import that static data memeber we do like this
import static java.lang.System.in;

class Prime{
    
    public void checkPrime(int... n ){
        //int ... n =int[] n;
         
         for(int i=0;i<n.length;i++){
              int j=2;
          
              boolean flag=true;
              
              while(j<n[i]){
               
                  if(n[i]%j==0){
                      flag=false;
                        break;
                       }
                  
                  j++;
             }
                
                 if(flag==true && n[i]!=1)
                     System.out.print(n[i]+" ");
                 
            
            
            
             }
             System.out.println();
          }
         
         
         
               
 }
    

public class Solution {

	public static void main(String[] args) {
		try{
		BufferedReader br=new BufferedReader(new InputStreamReader(in));
		int n1=Integer.parseInt(br.readLine());
		int n2=Integer.parseInt(br.readLine());
		int n3=Integer.parseInt(br.readLine());
		int n4=Integer.parseInt(br.readLine());
		int n5=Integer.parseInt(br.readLine());
		Prime ob=new Prime();
		ob.checkPrime(n1);
		ob.checkPrime(n1,n2);
		ob.checkPrime(n1,n2,n3);
		ob.checkPrime(n1,n2,n3,n4,n5);	
		Method[] methods=Prime.class.getDeclaredMethods();
		Set<String> set=new HashSet<>();
		boolean overload=false;
		for(int i=0;i<methods.length;i++)
		{
			if(set.contains(methods[i].getName()))
			{
				overload=true;
				break;
			}
			set.add(methods[i].getName());
			
		}
		if(overload)
		{
			throw new Exception("Overloading not allowed");
		}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
	}
	
}
